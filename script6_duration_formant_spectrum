form Get duration formant and spectrum
	comment Directory of sound files. Include the final "/".
	text sound_directory C:/Users/jason/desktop/2022.9/Tutorial 2 & MA Thesis/Vowel experiment/results/
	sentence Sound_file_extension .wav
	comment Path of the resulting text file:
	text resultsfile C:/Users/jason/desktop/2022.9/Tutorial 2 & MA Thesis/resultsfile.txt

	comment Formant analysis parameters
	positive Time_step 0.005
	integer Maximum_number_of_formants 5
	positive Maximum_formant_(Hz) 5500
	positive Window_length_(s) 0.025
	real Preemphasis_from_(Hz) 50
endform

# Make a listing of all the sound files in a directory:
Create Strings as file list... list 'sound_directory$'*'sound_file_extension$'
numberOfFiles = Get number of strings

# Check if the result file exists:
if fileReadable (resultsfile$)
	pause The file 'resultsfile$' already exists! Do you want to overwrite it?
	filedelete 'resultsfile$'
endif

# Create a header row for the result file:
header$ = "Filename	Duration	F1_midpoint	F2_midpoint	F1_0.75point	F2_0.75point	H1	H2	H1-H2_difference	spectrum_starting	spectrum_ending	f0_gap'newline$'"
fileappend "'resultsfile$'" 'header$'

# Open each sound file in the directory:
for ifile from 1 to numberOfFiles
	select Strings list
	filename$ = Get string... ifile
	Read from file... 'sound_directory$''filename$'

	# get the name of the sound object:
	soundname$ = selected$ ("Sound", 1)
	
	# get the duration of the sound object:
	select Sound 'soundname$'
	duration_s = Get total duration
	duration = round(duration_s * 1000)
	midpoint = duration_s * 0.5
	upper_quartile = duration_s * 0.75

	# get the formant information of the sound object:
	select Sound 'soundname$'
	To Formant (burg)... time_step maximum_number_of_formants maximum_formant window_length preemphasis_from
	select Formant 'soundname$'

	f1_50 = Get value at time... 1 midpoint Hertz Linear
	f1_50 = round(f1_50)
	f2_50 = Get value at time... 2 midpoint Hertz Linear
	f2_50 = round(f2_50)
	f1_75 = Get value at time... 1 upper_quartile Hertz Linear
	f1_75 = round(f1_75)
	f2_75 = Get value at time... 2 upper_quartile Hertz Linear
	f2_75 = round(f2_75)
	select Formant 'soundname$'
	Remove

	# get the pointprocess
	select Sound 'soundname$'
	pitch = To Pitch (cc): 0.0, 75, 15, 0, 0.03, 0.45, 0.01, 0.35, 0.14, 600
	select Sound 'soundname$'
	plusObject: pitch
	pointprocess = To PointProcess (cc)
	removeObject: pitch

	# get the beginning and end point of the given number of the period
	selectObject: pointprocess
	number_of_points = Get number of points
	number_of_periods = Get number of periods: 0.0, 0.0, 0.0001, 0.02, 1.3
	f0_gap = number_of_points - number_of_periods - 1

	starting_time = Get time from index: 1
	ending_time = starting_time
	for interval from 1 to 3
 		interval_time = Get interval: (ending_time + 0.0001)
		ending_time = ending_time + interval_time
	endfor

	select Sound 'soundname$'
	Extract part: starting_time, ending_time, "rectangular", 1.0, "yes"
	To Spectrum: "no"

	# remove the pointprocess file
	if f0_gap < 1
		selectObject: pointprocess
		Remove
	endif

	# get the ending point in the entire sound
	actual_start = round(starting_time/duration_s * 1000)/10
	actual_end = round(ending_time/duration_s * 1000)/10
	
	# get the H1 and H2 difference
	partname$ = soundname$ + "_part"
	select Spectrum 'partname$'
	table = Tabulate: 1, 1, 0, 0, 0, 1
	tablename$ = "Table " + partname$
	b3 = object [tablename$, 3, 3]
	b4 = object [tablename$, 4, 3]
	b5 = object [tablename$, 5, 3]
	b6 = object [tablename$, 6, 3]
	b7 = object [tablename$, 7, 3]
	b8 = object [tablename$, 8, 3]
	if b4 > b3 and b4 > b5
		h1 = b4
	else
		h1 = -1
	endif

	if b7 > b6 and b7 > b8
		h2 = b7
	else
		h2 = -1
	endif

	h1_h2 = h1 - h2
	selectObject: table
	Remove

	if h1 != -1 and h2 != -1
		select Spectrum 'partname$'
		Remove
		select Sound 'partname$'
		Remove
	endif

	# Save result to text file:
	resultline$ = "'soundname$'	'duration'	'f1_50'	'f2_50'	'f1_75'	'f2_75'	'h1'	'h2'	'h1_h2'	'actual_start'	'actual_end'	'f0_gap''newline$'"
	fileappend "'resultsfile$'" 'resultline$'

endfor

